{"version":3,"sources":["assets/css/Navbar.module.css","components/Navbar.js","pages/Landing.js","pages/Dashboard.js","assets/data/Game-1-Data.js","components/Letter.js","utils/utils.js","components/Score.js","components/FeedbackWord.js","components/ScoreBoard.js","pages/Game1.js","assets/data/Game-2-Data.js","components/Sentence.js","components/Option.js","pages/Game2.js","assets/data/Game-3-Data.js","components/ShuffleBoardConstructor.js","pages/Game3.js","pages/Tutorial.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","Navbar","react_default","a","createElement","className","styles","Link","to","Landing","props","onClick","history","push","Game_1_Data","words","Letter","style","cursor","id","children","utils","classToggle","e","color","target","classList","toggle","toggleThisWordsAccent","textContent","this","toggleAccent","fromAccentToNormal","letter","charCodeAt","String","fromCharCode","fromNormalToAccent","hasAccent","getAccentIndex","word","i","length","removeAccent","fisherYatesShuffle","arr","arguments","undefined","j","Math","floor","random","_ref","Score","score","mistakes","wordsRemaining","FeedbackWord","letters","split","clickedLetterIndex","separatedLetter","map","styleClass","includes","toString","concat","key","GameFeedback","historyForEachWord","join","FeedbackWords","data","components_FeedbackWord","Fragment","colorError","colorSuccess","Game","state","errors","progress","isGameFinished","slice","gameHistory","handleMistake","indexClickedLetter","persist","setTimeout","_this","setState","Object","toConsumableArray","handleSuccess","_this2","c","components_Letter","_this$state","actualWord","gameTitle","renderLetters","ScoreBoard","components_Score","Component","Game_2_Data","sentence","correct","incorrect","Option","click","disabled","option","successClass","errorClass","Game2","success","error","next","increment","stateKey","temp","defineProperty","handleError","toggleDisabled","handleProgress","buttonClassRemove","element","document","querySelector","remove","nextBtn","Sentence","components_Option","height","Game_3_Data","easy","medium","hard","ShuffleBoardConstructor","triggerShuffle","allOptions","allStyledOptions","divClass","colorDanger","Game3","assign","difficultyIndex","difficulties","keys","isComplete","_this$state2","components_ShuffleBoardConstructor","Tutorial","App","HashRouter","components_Navbar","Switch","Route","path","exact","component","Dashboard","Game1","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a713538b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Navbar_Nav__1e9R7\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\"\nimport styles from '../assets/css/Navbar.module.css'\n\nconst Navbar = () => (\n  <nav className={styles.Nav + \" navbar navbar-expand-sm\"}>\n    <div className=\"container\">\n      <Link to=\"/\" className=\"navbar-brand\">Tildea</Link>\n      <div>\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\n            </li>\n              <Link className=\"nav-link btn btn-outline-primary mx-3\" to=\"/dashboard\">Login</Link>\n              <Link className=\"nav-link btn btn-primary\" to=\"/dashboard\">Sign Up</Link>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </nav>\n)\n\nexport default Navbar;","import React from \"react\"\n\nconst Landing = (props) => (\n    <div>\n        <div className=\"jumbotron jumbotron-fluid text-center\">\n            <div className=\"container py-5\">\n                <h1>Welcome To Tildea!</h1>\n            </div>\n        </div>\n        <div className=\"container\">\n            <div className=\"card my-3\">\n                <h5 className=\"card-header bg-primary text-white\">Games!</h5>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\n                    </p>\n                </div>\n            </div>\n            <div className=\"card my-3\">\n                <h5 className=\"card-header bg-success text-white\">Tutorials!</h5>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\n                    </p>\n                </div>\n            </div>\n            <div className=\"bg-danger shadow rounded p-5 my-5\">\n                <button \n                    className=\"btn btn-lg btn-light btn-block my-5\"\n                    onClick={() => props.history.push(\"/dashboard\")}>\n                    Go to the Dashboard!\n                </button>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Landing","import React from \"react\"\n\nconst Landing = (props) => (\n    <div>\n        <div className=\"jumbotron jumbotron-fluid text-center\">\n            <div className=\"container py-5\">\n                <h1>This is your Dashboard</h1>\n            </div>\n        </div>\n        <div className=\"container pt-5\">\n            <div className=\"jumbotron bg-light shadow\">\n                <h2>Tema 1</h2>\n                <div className=\"d-flex flex-wrap mt-5\">\n                    <div className=\"col-md-4 pl-md-0\">\n                        <button \n                            className=\"btn btn-success\" \n                            onClick={() => props.history.push(\"/tutorial\")}>\n                            this takes you to the tutorial\n                        </button>\n                    </div>\n                    <div className=\"col-md-8\">\n                        <button \n                            className=\"btn btn-danger mr-3\"\n                            onClick={() => props.history.push(\"/game1/1\")}>\n                            Game 1\n                        </button>\n                        <button \n                            className=\"btn btn-danger mr-3\"\n                            onClick={() => props.history.push(\"/game2/1\")}>\n                            Game 2\n                        </button>\n                        <button \n                            className=\"btn btn-danger mr-3\"\n                            onClick={() => props.history.push(\"/game3/1\")}>\n                            Game 3\n                        </button>\n                    </div>\n                </div>\n             </div>\n        </div>\n        \n    </div>\n)\n\nexport default Landing","    \nexport default {\n    words: [\n        \"respiración\",\n        \"compilación\",\n        \"retaliación\",\n        \"esdrújula\",\n        \"palíndromo\",\n        \"tándem\",\n    ]\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Letter = props => {\n    return (\n            <span \n                className=\"display-1 text-center px-3 pb-3 d-inline-block\"\n                style={{cursor: 'pointer',}} \n                id=\"letter\" \n                onClick={props.onClick}>\n                {props.children}\n            </span>\n    )\n}\n\nLetter.propTypes = {\n    accent: PropTypes.string,\n    value: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Letter;","const utils = {\n\n    classToggle(e, color) {\n        e.target.classList.toggle(color);\n    },\n\n    toggleThisWordsAccent(e) {\n        e.target.textContent = this.toggleAccent(e.target.textContent);\n    },\n\n    fromAccentToNormal(letter) {\n        switch(letter.charCodeAt(0)) {\n            case 193:\n                return String.fromCharCode(65);\n            case 201:\n                return String.fromCharCode(69);\n            case 205:\n                return String.fromCharCode(73);\n            case 211:\n                return String.fromCharCode(79);\n            case 218:\n                return String.fromCharCode(85);\n            case 225:\n                return String.fromCharCode(97);\n            case 233:\n                return String.fromCharCode(101);\n            case 237:\n                return String.fromCharCode(105);\n            case 243:\n                return String.fromCharCode(111);\n            case 250:\n                return String.fromCharCode(117);\n            default: \n                return letter;\n\n        }\n    },\n\n    fromNormalToAccent(letter) {\n        switch(letter.charCodeAt(0)) {\n            case 65:\n                return String.fromCharCode(193);\n            case 69:\n                return String.fromCharCode(201);\n            case 73:\n                return String.fromCharCode(205);\n            case 79:\n                return String.fromCharCode(211);\n            case 85:\n                return String.fromCharCode(218);\n            case 97:\n                return String.fromCharCode(225);\n            case 101:\n                return String.fromCharCode(233);\n            case 105:\n                return String.fromCharCode(237);\n            case 111:\n                return String.fromCharCode(243);\n            case 117:\n                return String.fromCharCode(250);\n            default: \n                return letter;\n        }\n    },\n\n    hasAccent(letter) {\n        switch(letter.charCodeAt(0)) {\n            case 193:\n            case 201:\n            case 205:\n            case 211:\n            case 218:\n            case 225:\n            case 233:\n            case 237:\n            case 243: \n            case 250:\n                return true;\n            default: \n                return false;\n        }\n    },\n\n    toggleAccent(letter) {\n        if(this.hasAccent(letter)) {\n            return this.fromAccentToNormal(letter);\n        }\n        return this.fromNormalToAccent(letter);\n    },\n    \n    getAccentIndex(word) {\n        if(!word) return null;\n        for(let i = 0; i < word.length; i++) {\n            if(this.hasAccent(word[i])) {\n                return i;\n            } \n        }\n        return -1;\n    },\n    \n    removeAccent(word) {\n        if(!word) return null;\n        for(let i = 0; i < word.length; i++) {\n            if(this.hasAccent(word[i])) {\n                return this.toggleAccent(word[i]);\n            }\n        }\n        return word;\n    },\n\n    fisherYatesShuffle(arr = []) {\n        for(let i = arr.length -1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n        }\n        return arr;\n    }\n}\n\nexport default utils;","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Score = props => {\n    return (\n        <div className=\"container d-flex flex-row justify-content-around\">\n            <h2 className=\"text-success\">Score:\n                <span className=\"h2\"> {props.score}</span>\n            </h2>\n            <h2 className=\"text-danger\">Mistakes:\n                <span className=\"h2\"> {props.mistakes}</span>\n            </h2>\n            <h2 className=\"text-primary\">Words remaining:\n                <span className=\"h2\"> {props.wordsRemaining}</span>\n            </h2>\n        </div>\n    )\n}\n\nScore.propTypes = {\n    score: PropTypes.number,\n    mistakes: PropTypes.number,\n    wordsRemaining: PropTypes.number,\n}\n\nexport default Score;","import React from 'react';\nimport utils from '../utils/utils';\n\nconst FeedbackWord = props => {\n    const letters = props.word.split(\"\");\n    const clickedLetterIndex = props.history.split(\"\")\n    \n    const separatedLetter = letters.map( (letter, i) => {\n        let styleClass = 'bg-white';\n        if (clickedLetterIndex.includes(i.toString())) {\n            styleClass = 'bg-danger';\n        }\n        if ( utils.hasAccent(letter) ) {\n            styleClass = 'bg-success';\n        }\n        return (\n            <span className={`${styleClass} px-3 pt-1 pb-3 rounded mx-1 d-inline-block display-4`} key={i}>{letter}</span>    \n        )\n    })\n\n    return (\n        <div className=\"my-3 h-100\">\n            {separatedLetter}\n        </div>\n    )\n}\n\nexport default FeedbackWord;","import React from 'react'\nimport FeedbackWord from \"./FeedbackWord\"\nimport data from '../assets/data/Game-1-Data';\n\nconst GameFeedback = (props) => {\n    // before [2, 5, 6, \" \", 2, 6, \" \"]\n    const historyForEachWord = props.history.join(\"\").split(\" \")\n    // after [\"256\", \"26\"]\n    const FeedbackWords = data.words.map( (word, i) => \n        <FeedbackWord word={word} history={historyForEachWord[i]} key={i}/>\n    );\n    return (\n        <>\n            {FeedbackWords}\n        </>\n    )\n}\n\nexport default GameFeedback;","import React, { Component } from 'react';\nimport data from '../assets/data/Game-1-Data';\nimport Letter from '../components/Letter';\nimport utils from '../utils/utils';\nimport Score from '../components/Score';\nimport GameFeedback from '../components/ScoreBoard';\n\n//variables for controlling color change, just bootstrap classes for now, they could also be implemented as dynamic css classes;\nconst colorError = 'bg-danger'; //not implemented yet\nconst colorSuccess = \"bg-success\"; //not implemented yet\nclass Game extends Component {\n    state = {\n        errors: 0,\n        progress: 0,\n        isGameFinished: false,\n        words: data.words.slice(),\n        gameHistory: [],\n    }\n    \n    handleMistake = (e, indexClickedLetter) => {\n        e.persist();\n        utils.classToggle(e,colorError);\n        setTimeout(() => {\n            this.setState({\n                errors: this.state.errors + 1,\n                gameHistory: [...this.state.gameHistory, indexClickedLetter],\n            })\n            utils.classToggle(e,colorError);\n        },400)\n    }\n\n    handleSuccess = e => {\n        const {progress} = this.state\n        e.persist();\n        utils.classToggle(e,colorSuccess);\n        utils.toggleThisWordsAccent(e);\n        setTimeout(() => {\n            this.setState({\n                progress: progress + 1,\n                gameHistory: [...this.state.gameHistory, \" \"],\n            })\n            if(this.state.progress === this.state.words.length) {\n                this.setState({\n                    isGameFinished: true,\n                })\n            }\n            utils.classToggle(e,colorSuccess);\n            utils.toggleThisWordsAccent(e);\n        }, 400);\n    }\n\n    renderLetters(word = []) {\n        return [...word].map((c, i) => {\n            if (i === utils.getAccentIndex(word)) {\n                return (\n                    <Letter \n                    key={i} \n                    onClick={(e) => {this.handleSuccess(e)}}\n                    >\n                        {utils.removeAccent(c)}\n                    </Letter>\n                    )\n            }\n            return (\n                <Letter key={i} onClick={(e) => {this.handleMistake(e,i)}}>{c}</Letter>\n            )\n        })\n    }\n\n    render() {\n        //Variables\n        const { words, progress, isGameFinished, errors, gameHistory} = this.state;\n        const actualWord = words[progress];\n\n        //conditional variables\n        const gameTitle = isGameFinished ? \n        \"Congratulations! You completed the level!\" : \n        \"Click the words that should be accented\";\n\n        return (\n            <div className=\"bg-light text-center py-5\">\n                <div className=\"container py-5\">\n                    <h1><span className=\"h1 font-weight-light\">{gameTitle}</span></h1>\n                    <div className=\"container h-100 py-5\">\n                        <div className=\"py-5\">\n                            {this.renderLetters(actualWord)}\n                        </div>\n                        {isGameFinished ?\n                            <>\n                                <GameFeedback history={gameHistory}/>\n                            </>\n                        : null}\n                    </div>\n                    {!isGameFinished ?\n                        <Score \n                        score={progress} \n                        mistakes={errors} \n                        wordsRemaining={words.length - progress}\n                        >\n                        </Score> \n                        :\n                        null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Game;","\nexport default [\n    {\n        sentence: \"Vengo __ la casa de Lucía\",\n        correct: \"de\",\n        incorrect: \"dé\",\n        id: 1\n    },\n    {\n        sentence: \"No quiero que me __ problemas\",\n        correct: \"dé\",\n        incorrect: \"de\",\n        id: 2\n    },\n    {\n        sentence: \"__ jarrón es bonito\",\n        correct: \"El\",\n        incorrect: \"Él\",\n        id: 3\n    },\n    {\n        sentence: \"__ te dijo eso?\",\n        correct: \"Él\",\n        incorrect: \"El\",\n        id: 4\n    },\n    {\n        sentence: \"Quiero comer, ___ no cualquier cosa\",\n        correct: \"mas\",\n        incorrect: \"más\",\n        id: 5\n    },\n    {\n        sentence: \"Me gusta ___ el verde que el rojo\",\n        correct: \"más\",\n        incorrect: \"mas\",\n        id: 6\n    },\n    {\n        sentence: \"No he hablado con __ madre hoy\",\n        correct: \"mi\",\n        incorrect: \"mí\",\n        id: 7\n    },\n    {\n        sentence: \"A __ me gustan las mujeres\",\n        correct: \"mí\",\n        incorrect: \"mi\",\n        id: 8\n    },\n]","import React from \"react\";\n\nconst Option = props => (\n    <div className=\"p-3 m-5 bg-light shadow rounded text-center\">\n        <h2 className=\"font-weight-light\">\n            {props.sentence}\n        </h2>\n    </div>  \n);\n\nexport default Option;\n","import React from 'react';\n\nconst Option = (props) => (\n\t<button\n\t\tonClick={props.click}\n\t\tclassName=\"display-4 border-0 rounded px-5 py-3 btn-light shadow\"\n\t\tdisabled={props.disabled}\n\t>\n\t\t{props.option}\n\t</button>\n);\n\nexport default Option;\n","import React, { Component } from \"react\";\nimport data from \"../assets/data/Game-2-Data\";\nimport Sentence from '../components/Sentence';\nimport Option from \"../components/Option\";\nimport Score from \"../components/Score\";\n\nconst successClass = 'bg-success';\nconst errorClass = 'bg-danger';\n\nclass Game2 extends Component {\n    state = {\n      data: data,\n      success: 0,\n      progress: 0,\n      error: 0,\n      disabled: false,\n      next: false\n    }\n\n    increment = (stateKey) => {\n      let temp = this.state[stateKey];\n      temp++;\n      this.setState({[stateKey]: temp})\n    }\n    \n    handleError = (e) => {\n      e.persist();\n      this.increment('error');\n      this.toggleDisabled();\n      this.classToggle(e, errorClass);\n      this.setState({next: true});\n    }\n    \n    handleSuccess = (e) => {\n      e.persist();\n      this.increment('success');\n      this.toggleDisabled();\n      this.classToggle(e, successClass);\n      setTimeout( () => {\n        this.handleProgress();\n      }, 500)\n    }\n\n    handleProgress = () => {\n      if (this.state.progress < this.state.data.length) {\n        this.increment('progress');\n      }\n      this.toggleDisabled();\n      this.buttonClassRemove(successClass);\n      this.buttonClassRemove(errorClass);\n      this.setState({next: false});\n    }\n\n    toggleDisabled = () => {\n      const disabled = !this.state.disabled;\n      this.setState({disabled});\n    }\n\n    classToggle = (e, className) => {\n      e.target.classList.toggle(className);\n    }\n\n    buttonClassRemove = (className) => {\n      const element = document.querySelector('button.' + className);\n      if (element) element.classList.remove(className);\n    }\n    \n    render() {\n        const {data, success, error, progress} = this.state;\n        const nextBtn = this.state.next ?\n          <button onClick={this.handleProgress} className=\"btn btn-lg btn-secondary\">Next</button>\n         : null;\n\n        const Game = progress < data.length ? (\n          <div>\n            <Sentence sentence={data[progress].sentence} />\n              <div className=\"row py-5 my-5\">\n                <div className=\"col-md-6 d-flex align-items-center justify-content-center border-right\">\n                  <Option\n                    click={this.handleSuccess}\n                    disabled={this.state.disabled}\n                    option={data[progress].correct}\n                  />\n                </div>\n                <div className=\"col-md-6 d-flex align-items-center justify-content-center\">\n                  <Option\n                    click={this.handleError}\n                    disabled={this.state.disabled}\n                    option={data[progress].incorrect}\n                  />\n                </div>\n              </div>\n              <div className=\"p-3 mt-3 mb-5 text-center\" style={{height: '3rem'}}>\n                {nextBtn}\n              </div>\n          </div>\n\n        ) : (\n          <div className=\"p-3 text-center my-5 shadow\">\n            <h1>Congratulations! You completed the game!</h1>\n          </div>\n        );\n\n        return (\n          <div>\n            <div className=\"container\">\n              {Game}\n              <Score\n                score={success}\n                mistakes={error}\n                wordsRemaining={data.length - progress}\n              />\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Game2;","export default {\n    easy: [\n        [\"tándem\",\"tandem\"],\n        [\"esdrújula\", \"esdrujúla\"],\n        [\"repetición\", \"répeticion\"]\n    ],\n    medium: [\n        [\"tándem\",\"tandem\", \"tandém\"],\n        [\"esdrújula\", \"esdrujúla\", \"ésdrujula\"],\n        [\"repetición\", \"répeticion\", \"repeticíon\"]\n    ],\n    hard: [\n        [\"paráfrasis\", \"parafrásis\", \"parafrasís\", \"párafrasis\"],\n        [\"esdrújula\", \"esdrujúla\", \"ésdrujula\", \"esdrujula\"],\n        [\"repetición\", \"répeticion\", \"repeticíon\", \"repéticion\"]\n    ]\n}","import React from 'react';\nimport Option from './Option';\nimport utils from '../utils/utils';\n\nconst ShuffleBoardConstructor = ({ option, handleSuccess, handleError, triggerShuffle}) => {\n\tconst allOptions = option.map((c, i) => {\n\t\t// ? The fist element is the correct one\n\t\tif (i === 0) {\n\t\t\treturn <Option key={c + i} option={option[i]} click={handleSuccess} />;\n\t\t} else {\n\t\t\treturn <Option key={c + i} option={option[i]} click={handleError} />;\n\t\t}\n\t});\n\n\t//TODO: this part of the component doesn't work properly yet, we have to develop a way to make him shuffle only when a correct component is clicked, and then inmmediately change this property, so that it doesn't update again.\n\tconst allShuffledOptions = triggerShuffle ? utils.fisherYatesShuffle(allOptions) : allOptions;\n\n\tconst allStyledOptions = allShuffledOptions.map((c, i, a) => {\n\t\tconst divClass = i === 0 && a.length % 2 === 1 ? 'col-md-12' : 'col-md-6 mt-5';\n\t\treturn (\n\t\t\t<div key={i} className={`${divClass} d-flex align-items-center justify-content-center`}>\n\t\t\t\t{c}\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn <div className=\"py-5 my-5 row\">{allStyledOptions}</div>;\n};\n\nexport default ShuffleBoardConstructor;\n","import React, { Component } from 'react';\nimport data from '../assets/data/Game-3-Data';\nimport Score from '../components/Score';\nimport utils from '../utils/utils';\nimport ShuffleBoardConstructor from '../components/ShuffleBoardConstructor';\n\nconst colorSuccess = 'bg-success';\nconst colorDanger = 'bg-danger';\nclass Game3 extends Component {\n\tstate = {\n\t\twords: Object.assign(data),\n\t\tprogress: 0,\n\t\terrors: 0,\n\t\tdifficultyIndex: 0,\n\t\tdifficulties: Object.keys(data),\n\t\tisComplete: false,\n\t\ttriggerShuffle: true,\n\t};\n\n\thandleSuccess = (e) => {\n\t\te.persist();\n\t\tutils.classToggle(e, colorSuccess);\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\tprogress: this.state.progress + 1,\n\t\t\t\ttriggerShuffle: true,\n\t\t\t});\n\t\t\tconst { words, progress, difficulties, difficultyIndex } = this.state;\n\t\t\tconst ammountOfWordsInTheActualDifficultyLevel = words[difficulties[difficultyIndex]].length;\n\t\t\tif (progress === ammountOfWordsInTheActualDifficultyLevel) {\n\t\t\t\tif(difficulties[difficulties.length - 1] === difficulties[difficultyIndex]) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisComplete: true,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdifficultyIndex: difficultyIndex + 1,\n\t\t\t\t\t\tprogress: 0\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tutils.classToggle(e, colorSuccess);\n\t\t}, 400);\n\t};\n\n\thandleError = (e) => {\n\t\te.persist();\n\t\tutils.classToggle(e, colorDanger);\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\terrors: this.state.errors + 1,\n\t\t\t\ttriggerShuffle: false,\n\t\t\t});\n\t\t\tutils.classToggle(e, colorDanger);\n\t\t}, 400);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\twords,\n\t\t\tprogress,\n\t\t\tisComplete,\n\t\t\terrors,\n\t\t\tdifficulties,\n\t\t\tdifficultyIndex,\n\t\t\ttriggerShuffle,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"p-3 text-center my-5 shadow\">\n\t\t\t\t\t{!isComplete ? (\n\t\t\t\t\t\t<h1>Click the correct word! (if you can :P)</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t<h1>Congratulations! You completed the level!</h1>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{\n\t\t\t\t\t\t!isComplete && \n\t\t\t\t\t\t<ShuffleBoardConstructor\n\t\t\t\t\t\toption={words[difficulties[difficultyIndex]][progress] || []}\n\t\t\t\t\t\thandleSuccess={this.handleSuccess}\n\t\t\t\t\t\thandleError={this.handleError}\n\t\t\t\t\t\ttriggerShuffle={triggerShuffle}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<Score\n\t\t\t\t\t// TODO: progress only reflex the progress in the actual dificulty level\n\t\t\t\t\tscore={progress}\n\t\t\t\t\tmistakes={errors}\n\t\t\t\t\t//  TODO: only relfex the words remaining in the actual dificulty level\n\t\t\t\t\twordsRemaining={words[difficulties[difficultyIndex]].length - progress}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Game3;\n","import React from \"react\"\n\nconst Tutorial = () => (\n    <div>\n        <div className=\"jumbotron jumbotron-fluid text-center\">\n            <div className=\"container py-5\">\n                <h1>Tutorial 1</h1>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Tutorial","// third party librarys\nimport React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// Components\nimport Navbar from \"./components/Navbar\";\nimport Landing from \"./pages/Landing\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Game1 from \"./pages/Game1\";\nimport Game2 from \"./pages/Game2\";\nimport Game3 from \"./pages/Game3\"\nimport Tutorial from \"./pages/Tutorial\"\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <>\n          <Navbar/>\n          <Switch>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/dashboard/\" component={Dashboard} />\n            <Route path=\"/game1/:id\" component={Game1} />\n            <Route path=\"/game2/:id\" component={Game2} />\n            <Route path=\"/game3/:id\" component={Game3} />\n            <Route path=\"/tutorial/\" component={Tutorial} />\n          </Switch>\n        </>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}